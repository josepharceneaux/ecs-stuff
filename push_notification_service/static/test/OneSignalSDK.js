!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}var installedModules={};__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";if("undefined"!=typeof OneSignal)var predefinedOneSignalPushes=OneSignal;__webpack_require__(1);if(predefinedOneSignalPushes)OneSignal._process_pushes(predefinedOneSignalPushes)},function(module,exports,__webpack_require__){(function(global){module.exports=global.OneSignal=__webpack_require__(2)}).call(exports,function(){return this}())},function(module,exports,__webpack_require__){(function(fetch){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _vars=__webpack_require__(4);var _api=__webpack_require__(6);var _loglevel=__webpack_require__(7);var _loglevel2=_interopRequireDefault(_loglevel);var _limitStore=__webpack_require__(8);var _limitStore2=_interopRequireDefault(_limitStore);__webpack_require__(9);var OneSignal={_VERSION:109013,_HOST_URL:_vars.HOST_URL,_app_id:null,_tagsToSendOnRegister:null,_notificationOpened_callback:null,_idsAvailable_callback:[],_defaultLaunchURL:null,_initOptions:null,_httpRegistration:false,_main_page_port:null,_isNotificationEnabledCallback:null,_subscriptionSet:true,_initOneSignalHttp:null,_sessionIframeAdded:false,_useHttpMode:null,_windowWidth:550,_windowHeight:480,_isNewVisitor:false,LOGGING:false,SERVICE_WORKER_UPDATER_PATH:"OneSignalSDKUpdaterWorker.js",SERVICE_WORKER_PATH:"OneSignalSDKWorker.js",SERVICE_WORKER_PARAM:{},_ensureDbInstance:function _ensureDbInstance(){return new Promise(function(resolve,reject){if(OneSignal._oneSignal_db)resolve(OneSignal._oneSignal_db);else{var request=indexedDB.open("ONE_SIGNAL_SDK_DB",1);request.onsuccess=function(event){var database=event.target.result;OneSignal._oneSignal_db=database;resolve(database)};request.onerror=function(event){_loglevel2["default"].error("Unable to open IndexedDB.",event);reject(event)};request.onupgradeneeded=function(event){_loglevel2["default"].debug("Rebuilding schema in IndexedDB...");var db=event.target.result;db.createObjectStore("Ids",{keyPath:"type"});db.createObjectStore("NotificationOpened",{keyPath:"url"});db.createObjectStore("Options",{keyPath:"key"})}}})},_getDbValue:function _getDbValue(table,key){return new Promise(function(resolve,reject){OneSignal._ensureDbInstance().then(function(database){var request=database.transaction(table).objectStore(table).get(key);request.onsuccess=function(event){if(request.result)OneSignal._triggerEvent_dbValueRetrieved(request.result);resolve(request.result)};request.onerror=function(event){reject(request.errorCode)}})["catch"](function(e){_loglevel2["default"].error(e)})})},_getDbValues:function _getDbValues(table){return new Promise(function(resolve,reject){OneSignal._ensureDbInstance().then(function(database){var jsonResult={};var cursor=database.transaction(table).objectStore(table).openCursor();cursor.onsuccess=function(event){var cursor=event.target.result;if(cursor){OneSignal._triggerEvent_dbValueRetrieved(cursor);jsonResult[cursor.key]=cursor.value.value;cursor["continue"]()}else resolve(jsonResult)};cursor.onerror=function(event){reject(cursor.errorCode)}})["catch"](function(e){_loglevel2["default"].error(e)})})},_putDbValue:function _putDbValue(table,value){return new Promise(function(resolve,reject){OneSignal._ensureDbInstance().then(function(database){database.transaction([table],"readwrite").objectStore(table).put(value);OneSignal._triggerEvent_dbValueSet(value);resolve(value)})["catch"](function(e){_loglevel2["default"].error(e)})})},_deleteDbValue:function _deleteDbValue(table,key){return new Promise(function(resolve,reject){OneSignal._ensureDbInstance().then(function(database){database.transaction([table],"readwrite").objectStore(table)["delete"](key);resolve(key)})["catch"](function(e){_loglevel2["default"].error(e)})})},_sendToOneSignalApi:function _sendToOneSignalApi(url,action,inData,callback,failedCallback){_loglevel2["default"].debug("Calling "+action+" "+(OneSignal._HOST_URL+url)+" with data:",inData);var contents={method:action};if(inData){contents.headers={"Content-type":"application/json;charset=UTF-8"};contents.body=JSON.stringify(inData)}fetch(OneSignal._HOST_URL+url,contents).then(function status(response){if(response.status>=200&&response.status<300)return Promise.resolve(response);else return Promise.reject(new Error(response.statusText))}).then(function status(response){return response.json()}).then(function(jsonData){if(null!=callback)callback(jsonData)})["catch"](function(e){_loglevel2["default"].error("OneSignal._sendToOneSignalApi() failed:",e);if(null!=failedCallback)failedCallback()})},_getLanguage:function _getLanguage(){return navigator.language?navigator.language.length>3?navigator.language.substring(0,2):navigator.language:"en"},_getPlayerId:function _getPlayerId(value,callback){if(value)callback(value);else OneSignal._getDbValue("Ids","userId").then(function _getPlayerId_gotUserId(result){if(result)callback(result.id);else callback(null)})["catch"](function(e){_loglevel2["default"].error(e)})},_getBrowserName:function _getBrowserName(){if(navigator.appVersion.match(/Chrome\/(.*?) /))return"Chrome";if(navigator.appVersion.match("Version/(.*) (Safari)"))return"Safari";if(navigator.userAgent.match(/Firefox\/([0-9]{2,}\.[0-9]{1,})/))return"Firefox";return""},_registerWithOneSignal:function _registerWithOneSignal(appId,registrationId,deviceType){OneSignal._getDbValue("Ids","userId").then(function _registerWithOneSignal_GotUserId(userIdResult){OneSignal._getNotificationTypes(function(notif_types){var requestUrl="players";var jsonData={app_id:appId,device_type:deviceType,language:OneSignal._getLanguage(),timezone:-60*(new Date).getTimezoneOffset(),device_model:navigator.platform+" "+OneSignal._getBrowserName(),device_os:(navigator.appVersion.match(/Chrome\/(.*?) /)||navigator.appVersion.match("Version/(.*) Safari")||navigator.userAgent.match(/Firefox\/([0-9]{2,}\.[0-9]{1,})/))[1],sdk:OneSignal._VERSION};if(userIdResult){requestUrl="players/"+userIdResult.id+"/on_session";jsonData.notification_types=notif_types}else if(1!=notif_types)jsonData.notification_types=notif_types;if(registrationId){jsonData.identifier=registrationId;OneSignal._putDbValue("Ids",{type:"registrationId",id:registrationId})}OneSignal._sendToOneSignalApi(requestUrl,"POST",jsonData,function registeredCallback(responseJSON){sessionStorage.setItem("ONE_SIGNAL_SESSION",true);if(responseJSON.id){OneSignal._putDbValue("Ids",{type:"userId",id:responseJSON.id});OneSignal._sendUnsentTags()}OneSignal._getPlayerId(responseJSON.id,function(userId){if(OneSignal._idsAvailable_callback.length>0)for(;OneSignal._idsAvailable_callback.length>0;){var curr_callback=OneSignal._idsAvailable_callback.pop();curr_callback({userId:userId,registrationId:registrationId})}if(OneSignal._httpRegistration){_loglevel2["default"].debug("Sending player Id and registrationId back to host page");_loglevel2["default"].debug(OneSignal._initOptions);var creator=opener||parent;OneSignal._safePostMessage(creator,{idsAvailable:{userId:userId,registrationId:registrationId}},OneSignal._initOptions.origin,null);if(opener)window.close()}})})})})["catch"](function(e){_loglevel2["default"].error(e)})},_sendUnsentTags:function _sendUnsentTags(){if(OneSignal._tagsToSendOnRegister){OneSignal.sendTags(OneSignal._tagsToSendOnRegister);OneSignal._tagsToSendOnRegister=null}},setDefaultNotificationUrl:function setDefaultNotificationUrl(url){OneSignal._putDbValue("Options",{key:"defaultUrl",value:url})},setDefaultIcon:function setDefaultIcon(icon){OneSignal._putDbValue("Options",{key:"defaultIcon",value:icon})},setDefaultTitle:function setDefaultTitle(title){OneSignal._putDbValue("Options",{key:"defaultTitle",value:title})},_visibilitychange:function _visibilitychange(){if("visible"==document.visibilityState){document.removeEventListener("visibilitychange",OneSignal._visibilitychange);OneSignal._sessionInit({})}},onCustomPromptClicked:function onCustomPromptClicked(event){_loglevel2["default"].debug("Event onesignal.prompt.custom.clicked:",event.detail);OneSignal._checkTrigger_eventSubscriptionChanged()},onNativePromptChanged:function onNativePromptChanged(event){_loglevel2["default"].debug("Event onesignal.prompt.native.permissionchanged:",event.detail);OneSignal._checkTrigger_eventSubscriptionChanged()},_onSubscriptionChanged:function _onSubscriptionChanged(event){_loglevel2["default"].debug("Event onesignal.subscription.changed:",event.detail);if(OneSignal._isNewVisitor&&true===event.detail)OneSignal._getDbValue("Ids","userId").then(function(result){var welcome_notification_opts=OneSignal._initOptions.welcomeNotification;var welcome_notification_disabled=void 0!==welcome_notification_opts&&true===welcome_notification_opts.disable;var title=void 0!==welcome_notification_opts&&void 0!==welcome_notification_opts.title&&null!==welcome_notification_opts.title?welcome_notification_opts.title:"";var message=void 0!==welcome_notification_opts&&void 0!==welcome_notification_opts.message&&null!==welcome_notification_opts.message&&welcome_notification_opts.message.length>0?welcome_notification_opts.message:"Thanks for subscribing!";if(!welcome_notification_disabled){_loglevel2["default"].debug("Because this user is a new site visitor, a welcome notification will be sent.");(0,_api.sendNotification)(OneSignal._app_id,[result.id],{en:title},{en:message});OneSignal._isNewVisitor=false}})["catch"](function(e){_loglevel2["default"].error(e)})},_onDbValueRetrieved:function _onDbValueRetrieved(event){_loglevel2["default"].debug("Event onesignal.db.retrieved:",event.detail)},_onDbValueSet:function _onDbValueSet(event){_loglevel2["default"].debug("Event onesignal.db.valueset:",event.detail);var info=event.detail;if("userId"===info.type){_limitStore2["default"].put("db.ids.userId",info.id);OneSignal._checkTrigger_eventSubscriptionChanged()}},_onInternalSubscriptionSet:function _onInternalSubscriptionSet(event){_loglevel2["default"].debug("Event onesignal.internal.subscriptionset:",event.detail);var newSubscriptionValue=event.detail;_limitStore2["default"].put("subscription.value",newSubscriptionValue);OneSignal._checkTrigger_eventSubscriptionChanged()},_checkTrigger_eventSubscriptionChanged:function _checkTrigger_eventSubscriptionChanged(){_loglevel2["default"].debug("Called _checkTrigger_eventSubscriptionChanged().");var permissions=_limitStore2["default"].get("notification.permission");var lastPermission=permissions[permissions.length-2];var currentPermission=permissions[permissions.length-1];var ids=_limitStore2["default"].get("db.ids.userId");var lastId=ids[ids.length-2];var currentId=ids[ids.length-1];var subscriptionStates=_limitStore2["default"].get("subscription.value");var lastSubscriptionState=subscriptionStates[subscriptionStates.length-2];var currentSubscriptionState=subscriptionStates[subscriptionStates.length-1];var newSubscriptionState="unchanged";if(("default"===lastPermission||"denied"===lastPermission||null===lastPermission)&&"granted"===currentPermission&&null!==currentId&&true===currentSubscriptionState||false===lastSubscriptionState&&true===currentSubscriptionState&&null!=currentId&&"granted"===currentPermission)newSubscriptionState=true;if("denied"!==lastPermission&&"denied"===currentPermission||"granted"===lastPermission&&"granted"!==currentPermission||null!==lastId&&null===currentId||false!==lastSubscriptionState&&false===currentSubscriptionState)newSubscriptionState=false;if("unchanged"!==newSubscriptionState){var lastTriggerTimes=_limitStore2["default"].put("event.subscriptionchanged.lastriggered",Date.now());var currentTime=lastTriggerTimes[lastTriggerTimes.length-1];var lastTriggerTime=lastTriggerTimes[lastTriggerTimes.length-2];var elapsedTimeSeconds=(currentTime-lastTriggerTime)/1e3;var lastEventStates=_limitStore2["default"].put("event.subscriptionchanged.laststates",newSubscriptionState);var currentState=lastEventStates[lastEventStates.length-1];var lastState=lastEventStates[lastEventStates.length-2];var shouldNotTriggerEvent=null!=lastTriggerTime&&1>=elapsedTimeSeconds||currentState===lastState;if(false===shouldNotTriggerEvent)OneSignal._triggerEvent_subscriptionChanged(newSubscriptionState)}},init:function init(options){OneSignal._initOptions=options;if(OneSignal.LOGGING)_loglevel2["default"].enableAll();else _loglevel2["default"].setLevel("error");_loglevel2["default"].info("OneSignal Web SDK loaded (version "+OneSignal._VERSION+").");if(!OneSignal.isPushNotificationsSupported()){_loglevel2["default"].warn("Your browser does not support push notifications.");return}if(navigator.permissions&&!(OneSignal._isBrowserFirefox()&&OneSignal._getFirefoxVersion()<=45)){OneSignal._usingNativePermissionHook=true;var currentNotificationPermission=OneSignal._getNotificationPermission();_limitStore2["default"].put("notification.permission",currentNotificationPermission);navigator.permissions.query({name:"notifications"}).then(function(permissionStatus){permissionStatus.onchange=function(){var recentPermissions=_limitStore2["default"].get("notification.permission");var permissionBeforePrompt=recentPermissions[0];OneSignal._triggerEvent_nativePromptPermissionChanged(permissionBeforePrompt)}})["catch"](function(e){_loglevel2["default"].error(e)})}else{var currentNotificationPermission=OneSignal._getNotificationPermission();_limitStore2["default"].put("notification.permission",currentNotificationPermission)}OneSignal._getDbValue("Ids","userId").then(function(result){if(void 0===result)OneSignal._isNewVisitor=true;var storeValue=result?result.id:null;_limitStore2["default"].put("db.ids.userId",storeValue)});OneSignal._getSubscription(function(currentSubscription){_limitStore2["default"].put("subscription.value",currentSubscription)});window.addEventListener("onesignal.prompt.custom.clicked",OneSignal.onCustomPromptClicked);window.addEventListener("onesignal.prompt.native.permissionchanged",OneSignal.onNativePromptChanged);window.addEventListener("onesignal.subscription.changed",OneSignal._onSubscriptionChanged);window.addEventListener("onesignal.db.valueretrieved",OneSignal._onDbValueRetrieved);window.addEventListener("onesignal.db.valueset",OneSignal._onDbValueSet);window.addEventListener("onesignal.db.valueset",OneSignal._onDbValueSet);window.addEventListener("onesignal.internal.subscriptionset",OneSignal._onInternalSubscriptionSet);OneSignal._useHttpMode=!OneSignal._isSupportedSafari()&&(!OneSignal._supportsDirectPermission()||OneSignal._initOptions.subdomainName);if(OneSignal._useHttpMode)OneSignal._initOneSignalHttp="https://"+OneSignal._initOptions.subdomainName+".onesignal.com/sdks/initOneSignalHttp";else OneSignal._initOneSignalHttp="https://onesignal.com/sdks/initOneSignalHttps";if(false)OneSignal._initOneSignalHttp=_vars.DEV_HOST+"/dev_sdks/initOneSignalHttp";if(OneSignal._isSupportedSafari()&&"undefined"==typeof window.fetch){var s=document.createElement("script");s.setAttribute("src","https://cdnjs.cloudflare.com/ajax/libs/fetch/0.9.0/fetch.js");document.head.appendChild(s)}if("complete"===document.readyState)OneSignal._internalInit();else window.addEventListener("load",OneSignal._internalInit)},_internalInit:function _internalInit(){Promise.all([OneSignal._getDbValue("Ids","appId"),OneSignal._getDbValue("Ids","registrationId"),OneSignal._getDbValue("Options","subscription")]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result){var appIdResult=result[0];var registrationIdResult=result[1];var subscriptionResult=result[2];if(appIdResult&&appIdResult.id!=OneSignal._initOptions.appId){OneSignal._deleteDbValue("Ids","userId");sessionStorage.removeItem("ONE_SIGNAL_SESSION")}if(sessionStorage.getItem("ONE_SIGNAL_SESSION")&&!OneSignal._initOptions.subdomainName&&("denied"==Notification.permission||sessionStorage.getItem("ONE_SIGNAL_NOTIFICATION_PERMISSION")==Notification.permission))return;sessionStorage.setItem("ONE_SIGNAL_NOTIFICATION_PERMISSION",Notification.permission);if(false==OneSignal._initOptions.autoRegister&&!registrationIdResult&&null==OneSignal._initOptions.subdomainName)return;if("visible"!=document.visibilityState){document.addEventListener("visibilitychange",OneSignal._visibilitychange);return}OneSignal._sessionInit({})})["catch"](function(e){_loglevel2["default"].error(e)})},registerForPushNotifications:function registerForPushNotifications(options){if(!OneSignal.isPushNotificationsSupported()){_loglevel2["default"].warn("Your browser does not support push notifications.");return}if(!options)options={};options.fromRegisterFor=true;OneSignal._sessionInit(options)},_initHttp:function _initHttp(options){OneSignal._initOptions=options;if(options.continuePressed)OneSignal.setSubscription(true);var isIframe=null!=parent&&parent!=window;var creator=opener||parent;if(!creator){_loglevel2["default"].debug("ERROR:_initHttp: No opener or parent found!");return}var messageChannel=new MessageChannel;messageChannel.port1.onmessage=function(event){_loglevel2["default"].debug("_initHttp.messageChannel.port1.onmessage",event);if(event.data.initOptions){OneSignal.setDefaultNotificationUrl(event.data.initOptions.defaultUrl);OneSignal.setDefaultTitle(event.data.initOptions.defaultTitle);if(event.data.initOptions.defaultIcon)OneSignal.setDefaultIcon(event.data.initOptions.defaultIcon);_loglevel2["default"].debug("document.URL",event.data.initOptions.parent_url);OneSignal._getDbValue("NotificationOpened",event.data.initOptions.parent_url).then(function registerForPushNotifications_GotNotificationOpened(notificationOpenedResult){_loglevel2["default"].debug("_initHttp NotificationOpened db",notificationOpenedResult);if(notificationOpenedResult){OneSignal._deleteDbValue("NotificationOpened",event.data.initOptions.parent_url);_loglevel2["default"].debug("OneSignal._safePostMessage:targetOrigin:",OneSignal._initOptions.origin);OneSignal._safePostMessage(creator,{openedNotification:notificationOpenedResult.data},OneSignal._initOptions.origin,null)}})["catch"](function(e){_loglevel2["default"].error(e)})}else if(event.data.getNotificationPermission)OneSignal._getSubdomainState(function(curState){OneSignal._safePostMessage(creator,{currentNotificationPermission:curState},OneSignal._initOptions.origin,null)});else if(event.data.setSubdomainState)OneSignal.setSubscription(event.data.setSubdomainState.setSubscription)};OneSignal._getSubdomainState(function(curState){curState.isIframe=isIframe;OneSignal._safePostMessage(creator,{oneSignalInitPageReady:curState},OneSignal._initOptions.origin,[messageChannel.port2])});OneSignal._initSaveState();OneSignal._httpRegistration=true;if(0==location.search.indexOf("?session=true"))return;OneSignal._getPlayerId(null,function(player_id){if(!isIframe||player_id){_loglevel2["default"].debug("Before navigator.serviceWorker.register");navigator.serviceWorker.register(OneSignal.SERVICE_WORKER_PATH,OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications,OneSignal._registerError);_loglevel2["default"].debug("After navigator.serviceWorker.register")}})},_getSubdomainState:function _getSubdomainState(callback){var state={};Promise.all([OneSignal._getDbValue("Ids","userId"),OneSignal._getDbValue("Ids","registrationId"),OneSignal._getDbValue("Options","subscription")]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result){var userIdResult=result[0];var registrationIdResult=result[1];var subscriptionResult=result[2];callback({userId:userIdResult?userIdResult.id:null,registrationId:registrationIdResult?registrationIdResult.id:null,notifPermssion:Notification.permission,subscriptionSet:subscriptionResult?subscriptionResult.value:null,isPushEnabled:"granted"==Notification.permission&&userIdResult&&registrationIdResult&&(subscriptionResult&&subscriptionResult.value||null==subscriptionResult)})})["catch"](function(e){_loglevel2["default"].error(e)})},_initSaveState:function _initSaveState(){OneSignal._app_id=OneSignal._initOptions.appId;OneSignal._putDbValue("Ids",{type:"appId",id:OneSignal._app_id});OneSignal._putDbValue("Options",{key:"pageTitle",value:document.title})},_supportsDirectPermission:function _supportsDirectPermission(){return OneSignal._isSupportedSafari()||"https:"==location.protocol||0==location.host.indexOf("localhost")||0==location.host.indexOf("127.0.0.1")},_sessionInit:function _sessionInit(options){_loglevel2["default"].debug("Called OneSignal._sessionInit():",options);OneSignal._initSaveState();var hostPageProtocol=location.origin.match(/^http(s|):\/\/(www\.|)/)[0];if(OneSignal._useHttpMode){if(options.fromRegisterFor){var dualScreenLeft=void 0!=window.screenLeft?window.screenLeft:screen.left;var dualScreenTop=void 0!=window.screenTop?window.screenTop:screen.top;var thisWidth=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width;var thisHeight=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height;var childWidth=OneSignal._windowWidth;var childHeight=OneSignal._windowHeight;var left=thisWidth/2-childWidth/2+dualScreenLeft;var top=thisHeight/2-childHeight/2+dualScreenTop;_loglevel2["default"].debug("Opening popup window.");var message_localization_opts=OneSignal._initOptions.promptOptions;var message_localization_opts_str="";if(message_localization_opts){var message_localization_params=["actionMessage","exampleNotificationTitleDesktop","exampleNotificationMessageDesktop","exampleNotificationTitleMobile","exampleNotificationMessageMobile","exampleNotificationCaption","acceptButtonText","cancelButtonText"];for(var i=0;i<message_localization_params.length;i++){var key=message_localization_params[i];var value=message_localization_opts[key];var encoded_value=encodeURIComponent(value);if(value||""===value)message_localization_opts_str+="&"+key+"="+encoded_value}}var childWindow=window.open(OneSignal._initOneSignalHttp+"?"+message_localization_opts_str+"&hostPageProtocol="+hostPageProtocol,"_blank","scrollbars=yes, width="+childWidth+", height="+childHeight+", top="+top+", left="+left);if(childWindow)childWindow.focus()}else{_loglevel2["default"].debug("Opening iFrame.");OneSignal._addSessionIframe(hostPageProtocol)}return}if(OneSignal._isSupportedSafari()){if(OneSignal._initOptions.safari_web_id){var notificationPermissionBeforeRequest=OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);window.safari.pushNotification.requestPermission(OneSignal._HOST_URL+"safari",OneSignal._initOptions.safari_web_id,{app_id:OneSignal._app_id},function(data){_loglevel2["default"].debug(data);var notificationPermissionAfterRequest=OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);if(data.deviceToken)OneSignal._registerWithOneSignal(OneSignal._app_id,data.deviceToken.toLowerCase(),7);else sessionStorage.setItem("ONE_SIGNAL_SESSION",true);OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest)})}}else if(options.modalPrompt&&options.fromRegisterFor){if(!OneSignal.isPushNotificationsSupported()){_loglevel2["default"].warn("An attempt was made to open the HTTPS modal permission prompt, but push notifications are not supported on this browser. Opening canceled.");return}OneSignal.isPushNotificationsEnabled(function(pushEnabled){var element=document.createElement("div");element.setAttribute("id","OneSignal-iframe-modal");element.innerHTML='<div id="notif-permission" style="background: rgba(0, 0, 0, 0.7); position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 9000; display: block"></div>';document.body.appendChild(element);var iframeStyle=document.createElement("style");iframeStyle.innerHTML="@media (max-width: 560px) { .OneSignal-permission-iframe { width: 100%; height: 100%;} }@media (min-width: 561px) { .OneSignal-permission-iframe { top: 50%; left: 50%; margin-left: -275px; margin-top: -248px;} }";document.getElementsByTagName("head")[0].appendChild(iframeStyle);var iframeNode=document.createElement("iframe");iframeNode.className="OneSignal-permission-iframe";iframeNode.style.cssText="background: rgba(255, 255, 255, 1); position: fixed;";iframeNode.src=OneSignal._initOneSignalHttp+"?id="+OneSignal._app_id+"&httpsPrompt=true&pushEnabled="+pushEnabled+"&permissionBlocked="+("undefined"==typeof Notification||"denied"==Notification.permission)+"&hostPageProtocol="+hostPageProtocol;iframeNode.setAttribute("frameborder","0");iframeNode.width=OneSignal._windowWidth.toString();iframeNode.height=OneSignal._windowHeight.toString();_loglevel2["default"].debug("Opening HTTPS modal prompt.");document.getElementById("notif-permission").appendChild(iframeNode)})}else if("serviceWorker"in navigator)OneSignal._registerForW3CPush(options);else _loglevel2["default"].debug("Service workers are not supported in this browser.");OneSignal._triggerEvent("onesignal.sdk.initialized",null)},_registerForW3CPush:function _registerForW3CPush(options){OneSignal._getDbValue("Ids","registrationId").then(function _registerForW3CPush_GotRegistrationId(registrationIdResult){if(!registrationIdResult||!options.fromRegisterFor||"granted"!=Notification.permission)navigator.serviceWorker.getRegistration().then(function(serviceWorkerRegistration){var sw_path="";if(OneSignal._initOptions.path)sw_path=OneSignal._initOptions.path;if("undefined"==typeof serviceWorkerRegistration)OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_PATH);else if(serviceWorkerRegistration.active){if(serviceWorkerRegistration.active.scriptURL.indexOf(sw_path+OneSignal.SERVICE_WORKER_PATH)>-1)OneSignal._getDbValue("Ids","WORKER1_ONE_SIGNAL_SW_VERSION").then(function(versionResult){if(versionResult)if(versionResult.id!=OneSignal._VERSION)OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_UPDATER_PATH);else OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_PATH);else OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_PATH)})["catch"](function(e){_loglevel2["default"].error(e)});else if(serviceWorkerRegistration.active.scriptURL.indexOf(sw_path+OneSignal.SERVICE_WORKER_UPDATER_PATH)>-1)OneSignal._getDbValue("Ids","WORKER2_ONE_SIGNAL_SW_VERSION").then(function(versionResult){if(versionResult)if(versionResult.id!=OneSignal._VERSION)OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_PATH);else OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_UPDATER_PATH);else OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_UPDATER_PATH)})["catch"](function(e){_loglevel2["default"].error(e)})}else if(null==serviceWorkerRegistration.installing)OneSignal._registerServiceWorker(sw_path+OneSignal.SERVICE_WORKER_PATH)})["catch"](function(e){_loglevel2["default"].error(e)})})["catch"](function(e){_loglevel2["default"].error(e)})},_registerServiceWorker:function _registerServiceWorker(full_sw_and_path){navigator.serviceWorker.register(full_sw_and_path,OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications,OneSignal._registerError)},_addSessionIframe:function _addSessionIframe(hostPageProtocol){var node=document.createElement("iframe");node.style.display="none";node.src=OneSignal._initOneSignalHttp+"Iframe";if(sessionStorage.getItem("ONE_SIGNAL_SESSION"))node.src+="?session=true&hostPageProtocol="+hostPageProtocol;else node.src+="?hostPageProtocol="+hostPageProtocol;document.body.appendChild(node);_loglevel2["default"].debug("Adding session iFrame.");OneSignal._sessionIframeAdded=true},_registerError:function _registerError(err){_loglevel2["default"].debug("navigator.serviceWorker.register:ERROR: "+err)},_enableNotifications:function _enableNotifications(existingServiceWorkerRegistration){if(existingServiceWorkerRegistration)_loglevel2["default"].debug("There is an older ServiceWorker:",existingServiceWorkerRegistration);if(!("PushManager"in window)){_loglevel2["default"].debug("Push messaging is not supported. No PushManager.");sessionStorage.setItem("ONE_SIGNAL_SESSION",true);return}if(!("showNotification"in ServiceWorkerRegistration.prototype)){_loglevel2["default"].debug("Notifications are not supported. showNotification not available in ServiceWorkerRegistration.");sessionStorage.setItem("ONE_SIGNAL_SESSION",true);return}if("denied"===Notification.permission){_loglevel2["default"].warn("The user has disabled notifications.");return}navigator.serviceWorker.ready.then(function(serviceWorkerRegistration){_loglevel2["default"].info("Service worker active:",serviceWorkerRegistration);OneSignal._subscribeForPush(serviceWorkerRegistration)})["catch"](function(e){_loglevel2["default"].error(e)})},_getNotificationPermission:function _getNotificationPermission(safariWebId){if(window.safari)if(safariWebId)return window.safari.pushNotification.permission(safariWebId).permission;else return"default";else return Notification.permission},_triggerEvent:function _triggerEvent(eventName,data){if("undefined"==typeof window){_loglevel2["default"].debug("Skipping triggering of event:",eventName,"because we are running in a ServiceWorker context.");return}var event=new CustomEvent(eventName,{bubbles:true,cancelable:true,details:data});window.dispatchEvent(event)},_triggerEvent_customPromptClicked:function _triggerEvent_customPromptClicked(clickResult){var recentPermissions=_limitStore2["default"].put("notification.permission",clickResult);OneSignal._triggerEvent("onesignal.prompt.custom.clicked",{result:clickResult})},_triggerEvent_nativePromptPermissionChanged:function _triggerEvent_nativePromptPermissionChanged(from,to){if(void 0===to)to=OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);if(from!==to){var recentPermissions=_limitStore2["default"].put("notification.permission",to);OneSignal._triggerEvent("onesignal.prompt.native.permissionchanged",{from:from,to:to})}},_triggerEvent_subscriptionChanged:function _triggerEvent_subscriptionChanged(to){OneSignal._triggerEvent("onesignal.subscription.changed",to)},_triggerEvent_dbValueRetrieved:function _triggerEvent_dbValueRetrieved(value){OneSignal._triggerEvent("onesignal.db.valueretrieved",value)},_triggerEvent_dbValueSet:function _triggerEvent_dbValueSet(value){OneSignal._triggerEvent("onesignal.db.valueset",value)},_triggerEvent_internalSubscriptionSet:function _triggerEvent_internalSubscriptionSet(value){OneSignal._triggerEvent("onesignal.internal.subscriptionset",value)},_subscribeForPush:function _subscribeForPush(serviceWorkerRegistration){var notificationPermissionBeforeRequest=OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);serviceWorkerRegistration.pushManager.subscribe({userVisibleOnly:true}).then(function(subscription){sessionStorage.setItem("ONE_SIGNAL_NOTIFICATION_PERMISSION",Notification.permission);OneSignal._getDbValue("Ids","appId").then(function _subscribeForPush_GotAppId(appIdResult){var appId=appIdResult.id;_loglevel2["default"].debug("Called OneSignal._subscribeForPush() -> serviceWorkerRegistration.pushManager.subscribe().");var registrationId=null;if(subscription)if("undefined"!=typeof subscription.subscriptionId)registrationId=subscription.subscriptionId;else registrationId=subscription.endpoint.replace(new RegExp("^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)"),"");else _loglevel2["default"].warn("Could not subscribe your browser for push notifications.");OneSignal._registerWithOneSignal(appId,registrationId,OneSignal._isSupportedFireFox()?8:5);if(!OneSignal._usingNativePermissionHook)OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);
})["catch"](function(e){_loglevel2["default"].error(e)})})["catch"](function(e){_loglevel2["default"].error("Error while subscribing for push:",e);if(!OneSignal._usingNativePermissionHook)OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);if(20==e.code&&opener&&OneSignal._httpRegistration)window.close()})},sendTag:function sendTag(key,value){var jsonKeyValue={};jsonKeyValue[key]=value;OneSignal.sendTags(jsonKeyValue)},sendTags:function sendTags(jsonPair){OneSignal._getDbValue("Ids","userId").then(function sendTags_GotUserId(userIdResult){if(userIdResult)OneSignal._sendToOneSignalApi("players/"+userIdResult.id,"PUT",{app_id:OneSignal._app_id,tags:jsonPair});else if(null==OneSignal._tagsToSendOnRegister)OneSignal._tagsToSendOnRegister=jsonPair;else{var resultObj={};for(var _obj in OneSignal._tagsToSendOnRegister)resultObj[_obj]=OneSignal._tagsToSendOnRegister[_obj];for(var _obj in jsonPair)resultObj[_obj]=jsonPair[_obj];OneSignal._tagsToSendOnRegister=resultObj}})["catch"](function(e){_loglevel2["default"].error("sendTags:",e)})},deleteTag:function deleteTag(key){OneSignal.deleteTags([key])},deleteTags:function deleteTags(keyArray){var jsonPair={};var length=keyArray.length;for(var i=0;length>i;i++)jsonPair[keyArray[i]]="";OneSignal.sendTags(jsonPair)},_handleNotificationOpened:function _handleNotificationOpened(event){var notificationData=JSON.parse(event.notification.tag);event.notification.close();Promise.all([OneSignal._getDbValue("Ids","appId"),OneSignal._getDbValue("Ids","userId")]).then(function _handleNotificationOpened_GotAppUserIds(results){var appIdResult=results[0];var userIdResult=results[1];if(appIdResult&&userIdResult)OneSignal._sendToOneSignalApi("notifications/"+notificationData.id,"PUT",{app_id:appIdResult.id,player_id:userIdResult.id,opened:true})})["catch"](function(e){_loglevel2["default"].error(e)});event.waitUntil(clients.matchAll({type:"window"}).then(function(clientList){var launchURL=registration.scope;if(OneSignal._defaultLaunchURL)launchURL=OneSignal._defaultLaunchURL;if(notificationData.launchURL)launchURL=notificationData.launchURL;for(var i=0;i<clientList.length;i++){var client=clientList[i];if("focus"in client&&client.url==launchURL){client.focus();client.postMessage(notificationData);return}}if("javascript:void(0);"!==launchURL&&"do_not_open"!==launchURL){OneSignal._putDbValue("NotificationOpened",{url:launchURL,data:notificationData});clients.openWindow(launchURL)["catch"](function(error){clients.openWindow(registration.scope+"redirector.html?url="+launchURL)})}})["catch"](function(e){_loglevel2["default"].error(e)}))},_getTitle:function _getTitle(incomingTitle,callback){if(null!=incomingTitle){callback(incomingTitle);return}Promise.all([OneSignal._getDbValue("Options","defaultTitle"),OneSignal._getDbValue("Options","pageTitle")]).then(function _getTitle_GotDefaultPageTitles(results){var defaultTitleResult=results[0];var pageTitleResult=results[1];if(defaultTitleResult){callback(defaultTitleResult.value);return}else if(pageTitleResult&&null!=pageTitleResult.value){callback(pageTitleResult.value);return}else callback("")})["catch"](function(e){_loglevel2["default"].error(e)})},_handleGCMMessage:function _handleGCMMessage(serviceWorker,event){if(event.data&&"{"==event.data.text()[0]){_loglevel2["default"].debug("Received data.text: ",event.data.text());_loglevel2["default"].debug("Received data.json: ",event.data.json())}event.waitUntil(new Promise(function(resolve,reject){OneSignal._getTitle(null,function(title){OneSignal._getDbValue("Options","defaultIcon").then(function _handleGCMMessage_GotDefaultIcon(defaultIconResult){OneSignal._getLastNotifications(function(response,appId){var notificationData={id:response.custom.i,message:response.alert,additionalData:response.custom.a};if(response.title)notificationData.title=response.title;else notificationData.title=title;if(response.custom.u)notificationData.launchURL=response.custom.u;if(response.icon)notificationData.icon=response.icon;else if(defaultIconResult)notificationData.icon=defaultIconResult.value;serviceWorker.registration.showNotification(notificationData.title,{body:response.alert,icon:notificationData.icon,tag:JSON.stringify(notificationData)}).then(resolve)["catch"](function(e){_loglevel2["default"].error(e)});OneSignal._getDbValue("Options","defaultUrl").then(function(defaultUrlResult){if(defaultUrlResult)OneSignal._defaultLaunchURL=defaultUrlResult.value})["catch"](function(e){_loglevel2["default"].error(e)})},resolve)})["catch"](function(e){_loglevel2["default"].error(e)})})}))},_getLastNotifications:function _getLastNotifications(itemCallback,completeCallback){OneSignal._getDbValue("Ids","userId").then(function _getLastNotifications_GotUserId(userIdResult){if(userIdResult)OneSignal._sendToOneSignalApi("players/"+userIdResult.id+"/chromeweb_notification","GET",null,function(response){for(var i=0;i<response.length;i++)itemCallback(JSON.parse(response[i]))},function(){completeCallback()});else{_loglevel2["default"].debug("Error: could not get notificationId");completeCallback()}})["catch"](function(e){_loglevel2["default"].error(e)})},_listener_receiveMessage:function receiveMessage(event){_loglevel2["default"].debug("_listener_receiveMessage: ",event);if(void 0==OneSignal._initOptions)return;if(true&&""!==event.origin&&"https://onesignal.com"!==event.origin&&event.origin!=="https://"+OneSignal._initOptions.subdomainName+".onesignal.com")return;if(event.data.oneSignalInitPageReady){OneSignal._getDbValues("Options").then(function _listener_receiveMessage(options){_loglevel2["default"].debug("current options",options);if(!options.defaultUrl)options.defaultUrl=document.URL;if(!options.defaultTitle)options.defaultTitle=document.title;options.parent_url=document.URL;_loglevel2["default"].debug("Posting message to port[0]",event.ports[0]);event.ports[0].postMessage({initOptions:options})})["catch"](function(e){_loglevel2["default"].error("_listener_receiveMessage:",e)});var eventData=event.data.oneSignalInitPageReady;if(eventData.isIframe)OneSignal._iframePort=event.ports[0];if(eventData.userId)OneSignal._putDbValue("Ids",{type:"userId",id:eventData.userId});if(eventData.registrationId)OneSignal._putDbValue("Ids",{type:"registrationId",id:eventData.registrationId});OneSignal._fireNotificationEnabledCallback(eventData.isPushEnabled);OneSignal._sendUnsentTags()}else if(event.data.currentNotificationPermission)OneSignal._fireNotificationEnabledCallback(event.data.currentNotificationPermission.isPushEnabled);else if(event.data.idsAvailable){sessionStorage.setItem("ONE_SIGNAL_SESSION",true);OneSignal._putDbValue("Ids",{type:"userId",id:event.data.idsAvailable.userId});OneSignal._putDbValue("Ids",{type:"registrationId",id:event.data.idsAvailable.registrationId});if(OneSignal._idsAvailable_callback.length>0)for(;OneSignal._idsAvailable_callback.length>0;){var curr_callback=OneSignal._idsAvailable_callback.pop();curr_callback({userId:event.data.idsAvailable.userId,registrationId:event.data.idsAvailable.registrationId})}OneSignal._sendUnsentTags()}else if(event.data.httpsPromptAccepted){OneSignal.registerForPushNotifications();OneSignal.setSubscription(true);var elem=document.getElementById("OneSignal-iframe-modal");elem.parentNode.removeChild(elem);OneSignal._triggerEvent_customPromptClicked("granted")}else if(event.data.httpsPromptCanceled){var elem=document.getElementById("OneSignal-iframe-modal");elem.parentNode.removeChild(elem);OneSignal._triggerEvent_customPromptClicked("denied")}else if(event.data.httpPromptAccepted)OneSignal._triggerEvent_customPromptClicked("granted");else if(event.data.httpPromptCanceled)OneSignal._triggerEvent_customPromptClicked("denied");else if(OneSignal._notificationOpened_callback)OneSignal._notificationOpened_callback(event.data)},addListenerForNotificationOpened:function addListenerForNotificationOpened(callback){OneSignal._notificationOpened_callback=callback;if(window)OneSignal._getDbValue("NotificationOpened",document.URL).then(function(notificationOpenedResult){if(notificationOpenedResult){OneSignal._deleteDbValue("NotificationOpened",document.URL);OneSignal._notificationOpened_callback(notificationOpenedResult.data)}})["catch"](function(e){_loglevel2["default"].error(e)})},_fireNotificationEnabledCallback:function _fireNotificationEnabledCallback(notifPermssion){if(OneSignal._isNotificationEnabledCallback){OneSignal._isNotificationEnabledCallback(notifPermssion);OneSignal._isNotificationEnabledCallback=null}},getIdsAvailable:function getIdsAvailable(callback){if(void 0===callback)return;OneSignal._idsAvailable_callback.push(callback);Promise.all([OneSignal._getDbValue("Ids","userId"),OneSignal._getDbValue("Ids","registrationId")]).then(function getIdsAvailable_GotUserRegistrationIds(results){var userIdResult=results[0];var registrationIdResult=results[1];if(userIdResult)if(registrationIdResult)for(;OneSignal._idsAvailable_callback.length>0;){var curr_callback=OneSignal._idsAvailable_callback.pop();curr_callback({userId:userIdResult.id,registrationId:registrationIdResult.id})}else for(;OneSignal._idsAvailable_callback.length>0;){var curr_callback=OneSignal._idsAvailable_callback.pop();curr_callback({userId:userIdResult.id,registrationId:null})}})["catch"](function(e){_loglevel2["default"].error(e)})},getTags:function getTags(callback){OneSignal._getDbValue("Ids","userId").then(function(userIdResult){if(userIdResult)OneSignal._sendToOneSignalApi("players/"+userIdResult.id,"GET",null,function(response){callback(response.tags)})})["catch"](function(e){_loglevel2["default"].error(e)})},isPushNotificationsEnabled:function isPushNotificationsEnabled(callback){if(!OneSignal.isPushNotificationsSupported()){_loglevel2["default"].warn("Your browser does not support push notifications.");return}if(OneSignal._initOptions.subdomainName&&!OneSignal._isBrowserSafari()){OneSignal._isNotificationEnabledCallback=callback;if(OneSignal._iframePort)OneSignal._iframePort.postMessage({getNotificationPermission:true});return}Promise.all([OneSignal._getDbValue("Ids","registrationId"),OneSignal._getDbValue("Options","subscription")]).then(function(results){var registrationIdResult=results[0];var subscriptionResult=results[1];if(registrationIdResult){if(subscriptionResult&&!subscriptionResult.value)return callback(false);callback("granted"==Notification.permission)}else callback(false)})["catch"](function(e){_loglevel2["default"].error(e)})},_isSupportedSafari:function _isSupportedSafari(){var safariVersion=navigator.appVersion.match("Version/([0-9]?).* Safari");if(null==safariVersion)return false;if(/iPhone|iPad|iPod/i.test(navigator.userAgent))return false;return parseInt(safariVersion[1])>6},_isBrowserSafari:function _isBrowserSafari(){var safariVersion=navigator.appVersion.match("Version/([0-9]?).* Safari");return null!=safariVersion},_isSupportedFireFox:function _isSupportedFireFox(){var fireFoxVersion=navigator.userAgent.match(/(Firefox\/)([0-9]{2,}\.[0-9]{1,})/);if(fireFoxVersion)return parseInt(fireFoxVersion[2].substring(0,2))>43;return false},_isBrowserFirefox:function _isBrowserFirefox(){var fireFoxVersion=navigator.userAgent.match(/(Firefox\/)([0-9]{2,}\.[0-9]{1,})/);return null!=fireFoxVersion},_getFirefoxVersion:function _getFirefoxVersion(){var fireFoxVersion=navigator.userAgent.match(/(Firefox\/)([0-9]{2,}\.[0-9]{1,})/);if(fireFoxVersion)return parseInt(fireFoxVersion[2].substring(0,2));else return-1},isPushNotificationsSupported:function isPushNotificationsSupported(){var chromeVersion=navigator.appVersion.match(/Chrome\/(.*?) /);if(OneSignal._isSupportedFireFox())return true;if(OneSignal._isSupportedSafari())return true;if(!chromeVersion)return false;if(navigator.appVersion.match(/Edge/))return false;if(navigator.appVersion.match(/ wv/))return false;if(navigator.appVersion.match(/OPR\//))return false;if(/iPad|iPhone|iPod/.test(navigator.platform))return false;return parseInt(chromeVersion[1].substring(0,2))>41},_getNotificationTypes:function _getNotificationTypes(callback){OneSignal._getSubscription(function(db_subscriptionSet){callback(db_subscriptionSet?1:-2)})},setSubscription:function setSubscription(newSubscription){if(OneSignal._iframePort)OneSignal._iframePort.postMessage({setSubdomainState:{setSubscription:newSubscription}});else OneSignal._getSubscription(function(currentSubscription){if(currentSubscription!=newSubscription){OneSignal._putDbValue("Options",{key:"subscription",value:newSubscription});OneSignal._getDbValue("Ids","userId").then(function(userIdResult){if(userIdResult)OneSignal._sendToOneSignalApi("players/"+userIdResult.id,"PUT",{app_id:OneSignal._app_id,notification_types:newSubscription?1:-2},function setSubscriptionSetCallback(){OneSignal._triggerEvent_internalSubscriptionSet(newSubscription)})})["catch"](function(e){_loglevel2["default"].error(e)})}})},_getSubscription:function _getSubscription(callback){OneSignal._getDbValue("Options","subscription").then(function(subscriptionResult){callback(!(subscriptionResult&&false==subscriptionResult.value))})["catch"](function(e){_loglevel2["default"].error(e)})},_safePostMessage:function _safePostMessage(creator,data,targetOrigin,receiver){var tOrigin=targetOrigin.toLowerCase();if(tOrigin.startsWith("http://")){var queryDict={};location.search.substr(1).split("&").forEach(function(item){queryDict[item.split("=")[0]]=item.split("=")[1]});var validPreURLRegex=/^http(s|):\/\/(www\.|)/;tOrigin=tOrigin.replace(validPreURLRegex,queryDict.hostPageProtocol)}if(receiver)creator.postMessage(data,tOrigin,receiver);else creator.postMessage(data,tOrigin)},_process_pushes:function _process_pushes(array){for(var i=0;i<array.length;i++)OneSignal.push(array[i])},push:function push(item){if("function"==typeof item)item();else{var functionName=item.shift();OneSignal[functionName].apply(null,item)}}};if("undefined"!=typeof window)window.addEventListener("message",OneSignal._listener_receiveMessage,false);else{importScripts("https://cdn.onesignal.com/sdks/serviceworker-cache-polyfill.js");self.addEventListener("push",function(event){OneSignal._handleGCMMessage(self,event)});self.addEventListener("notificationclick",function(event){OneSignal._handleNotificationOpened(event)});var isSWonSubdomain=null!=location.href.match(/https\:\/\/.*\.onesignal.com\/sdks\//);if(false)isSWonSubdomain=true;self.addEventListener("install",function(event){_loglevel2["default"].debug("OneSignal Installed service worker "+self.location.pathname+":"+OneSignal._VERSION);if(self.location.pathname.indexOf("OneSignalSDKWorker.js")>-1)OneSignal._putDbValue("Ids",{type:"WORKER1_ONE_SIGNAL_SW_VERSION",id:OneSignal._VERSION});else OneSignal._putDbValue("Ids",{type:"WORKER2_ONE_SIGNAL_SW_VERSION",id:OneSignal._VERSION});if(isSWonSubdomain)event.waitUntil(caches.open("OneSignal_"+OneSignal._VERSION).then(function(cache){return cache.addAll(["/sdks/initOneSignalHttpIframe","/sdks/initOneSignalHttpIframe?session=*","/sdks/manifest_json"])})["catch"](function(e){_loglevel2["default"].error(e)}))});if(isSWonSubdomain)self.addEventListener("fetch",function(event){event.respondWith(caches.match(event.request).then(function(response){if(response)return response;return fetch(event.request)})["catch"](function(e){_loglevel2["default"].error(e)}))})}module.exports=OneSignal}).call(exports,__webpack_require__(3))},function(module,exports){(function(global){(function(){!function(){"use strict";function normalizeName(name){if("string"!=typeof name)name=String(name);if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name))throw new TypeError("Invalid character in header field name");return name.toLowerCase()}function normalizeValue(value){if("string"!=typeof value)value=String(value);return value}function Headers(headers){this.map={};if(headers instanceof Headers)headers.forEach(function(value,name){this.append(name,value)},this);else if(headers)Object.getOwnPropertyNames(headers).forEach(function(name){this.append(name,headers[name])},this)}function consumed(body){if(body.bodyUsed)return Promise.reject(new TypeError("Already read"));body.bodyUsed=true}function fileReaderReady(reader){return new Promise(function(resolve,reject){reader.onload=function(){resolve(reader.result)};reader.onerror=function(){reject(reader.error)}})}function readBlobAsArrayBuffer(blob){var reader=new FileReader;reader.readAsArrayBuffer(blob);return fileReaderReady(reader)}function readBlobAsText(blob){var reader=new FileReader;reader.readAsText(blob);return fileReaderReady(reader)}function Body(){this.bodyUsed=false;this._initBody=function(body){this._bodyInit=body;if("string"==typeof body)this._bodyText=body;else if(support.blob&&Blob.prototype.isPrototypeOf(body))this._bodyBlob=body;else if(support.formData&&FormData.prototype.isPrototypeOf(body))this._bodyFormData=body;else if(!body)this._bodyText="";else if(support.arrayBuffer&&ArrayBuffer.prototype.isPrototypeOf(body));else throw new Error("unsupported BodyInit type")};if(support.blob){this.blob=function(){var rejected=consumed(this);if(rejected)return rejected;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);else if(this._bodyFormData)throw new Error("could not read FormData body as blob");else return Promise.resolve(new Blob([this._bodyText]))};this.arrayBuffer=function(){return this.blob().then(readBlobAsArrayBuffer)};this.text=function(){var rejected=consumed(this);if(rejected)return rejected;if(this._bodyBlob)return readBlobAsText(this._bodyBlob);else if(this._bodyFormData)throw new Error("could not read FormData body as text");else return Promise.resolve(this._bodyText)}}else this.text=function(){var rejected=consumed(this);return rejected?rejected:Promise.resolve(this._bodyText)};if(support.formData)this.formData=function(){return this.text().then(decode)};this.json=function(){return this.text().then(JSON.parse)};return this}function normalizeMethod(method){var upcased=method.toUpperCase();return methods.indexOf(upcased)>-1?upcased:method}function Request(input,options){options=options||{};var body=options.body;if(Request.prototype.isPrototypeOf(input)){if(input.bodyUsed)throw new TypeError("Already read");this.url=input.url;this.credentials=input.credentials;if(!options.headers)this.headers=new Headers(input.headers);this.method=input.method;this.mode=input.mode;if(!body){body=input._bodyInit;input.bodyUsed=true}}else this.url=input;this.credentials=options.credentials||this.credentials||"omit";if(options.headers||!this.headers)this.headers=new Headers(options.headers);this.method=normalizeMethod(options.method||this.method||"GET");this.mode=options.mode||this.mode||null;this.referrer=null;if(("GET"===this.method||"HEAD"===this.method)&&body)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(body)}function decode(body){var form=new FormData;body.trim().split("&").forEach(function(bytes){if(bytes){var split=bytes.split("=");var name=split.shift().replace(/\+/g," ");var value=split.join("=").replace(/\+/g," ");form.append(decodeURIComponent(name),decodeURIComponent(value))}});return form}function headers(xhr){var head=new Headers;var pairs=xhr.getAllResponseHeaders().trim().split("\n");pairs.forEach(function(header){var split=header.trim().split(":");var key=split.shift().trim();var value=split.join(":").trim();head.append(key,value)});return head}function Response(bodyInit,options){if(!options)options={};this._initBody(bodyInit);this.type="default";this.status=options.status;this.ok=this.status>=200&&this.status<300;this.statusText=options.statusText;this.headers=options.headers instanceof Headers?options.headers:new Headers(options.headers);this.url=options.url||""}if(self.fetch)return;Headers.prototype.append=function(name,value){name=normalizeName(name);value=normalizeValue(value);var list=this.map[name];if(!list){list=[];this.map[name]=list}list.push(value)};Headers.prototype["delete"]=function(name){delete this.map[normalizeName(name)]};Headers.prototype.get=function(name){var values=this.map[normalizeName(name)];return values?values[0]:null};Headers.prototype.getAll=function(name){return this.map[normalizeName(name)]||[]};Headers.prototype.has=function(name){return this.map.hasOwnProperty(normalizeName(name))};Headers.prototype.set=function(name,value){this.map[normalizeName(name)]=[normalizeValue(value)]};Headers.prototype.forEach=function(callback,thisArg){Object.getOwnPropertyNames(this.map).forEach(function(name){this.map[name].forEach(function(value){callback.call(thisArg,value,name,this)},this)},this)};var support={blob:"FileReader"in self&&"Blob"in self&&function(){try{new Blob;return true}catch(e){return false}}(),formData:"FormData"in self,arrayBuffer:"ArrayBuffer"in self};var methods=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];Request.prototype.clone=function(){return new Request(this)};Body.call(Request.prototype);Body.call(Response.prototype);Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url})};Response.error=function(){var response=new Response(null,{status:0,statusText:""});response.type="error";return response};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(url,status){if(-1===redirectStatuses.indexOf(status))throw new RangeError("Invalid status code");return new Response(null,{status:status,headers:{location:url}})};self.Headers=Headers;self.Request=Request;self.Response=Response;self.fetch=function(input,init){return new Promise(function(resolve,reject){function responseURL(){if("responseURL"in xhr)return xhr.responseURL;if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders()))return xhr.getResponseHeader("X-Request-URL");return}var request;if(Request.prototype.isPrototypeOf(input)&&!init)request=input;else request=new Request(input,init);var xhr=new XMLHttpRequest;xhr.onload=function(){var status=1223===xhr.status?204:xhr.status;if(100>status||status>599){reject(new TypeError("Network request failed"));return}var options={status:status,statusText:xhr.statusText,headers:headers(xhr),url:responseURL()};var body="response"in xhr?xhr.response:xhr.responseText;resolve(new Response(body,options))};xhr.onerror=function(){reject(new TypeError("Network request failed"))};xhr.open(request.method,request.url,true);if("include"===request.credentials)xhr.withCredentials=true;if("responseType"in xhr&&support.blob)xhr.responseType="blob";request.headers.forEach(function(value,name){xhr.setRequestHeader(name,value)});xhr.send("undefined"==typeof request._bodyInit?null:request._bodyInit)})};self.fetch.polyfill=true}();module.exports=global.fetch}).call(global)}).call(exports,function(){return this}())},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.HOST_URL=exports.PROD_HOST=exports.DEV_HOST=void 0;var _utils=__webpack_require__(5);var DEV_HOST=exports.DEV_HOST="https://192.168.1.182:3000";var PROD_HOST=exports.PROD_HOST="https://onesignal.com";var HOST_URL=exports.HOST_URL=((0,_utils.isDev)()?DEV_HOST:PROD_HOST)+"/api/v1/"},function(module,exports,__webpack_require__){"use strict";function getHumanizedTimeDuration(timeDurationInMilliseconds){function addPluralSuffix(number){return number>1?"s":""}var duration=Math.floor(timeDurationInMilliseconds/1e3);var years=Math.floor(duration/31536e3);if(years)return years+" year"+addPluralSuffix(years);var days=Math.floor((duration%=31536e3)/86400);if(days)return days+" day"+addPluralSuffix(days);var hours=Math.floor((duration%=86400)/3600);if(hours)return hours+" hour"+addPluralSuffix(hours);var minutes=Math.floor((duration%=3600)/60);if(minutes)return minutes+" minute"+addPluralSuffix(minutes);var seconds=duration%60;if(seconds)return seconds+" second"+addPluralSuffix(seconds);return"just now"}function isServiceWorkerContext(){return"undefined"==typeof window}function isDev(){return false}Object.defineProperty(exports,"__esModule",{value:true});exports.getHumanizedTimeDuration=getHumanizedTimeDuration;exports.isServiceWorkerContext=isServiceWorkerContext;exports.isDev=isDev},function(module,exports,__webpack_require__){(function(fetch){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function apiCall(action,method,data){var headers=new Headers;headers.append("Content-Type","application/json;charset=UTF-8");var contents={method:method||"NO_METHOD_SPECIFIED",headers:headers,cache:"no-cache",body:JSON.stringify(data)};return new Promise(function(resolve,reject){fetch(_vars.HOST_URL+action,contents).then(function status(response){if(response.status>=200&&response.status<300)resolve(response.json());else reject(new Error(response.statusText))})["catch"](function(e){reject(e)})})}function sendNotification(appId,playerIds,titles,contents){var params={app_id:appId,headings:titles,contents:contents,include_player_ids:playerIds,isAnyWeb:true,url:"javascript:void(0);"};return apiCall("notifications","POST",params)}Object.defineProperty(exports,"__esModule",{value:true});exports.apiCall=apiCall;exports.sendNotification=sendNotification;var _vars=__webpack_require__(4);var _loglevel=__webpack_require__(7);var _loglevel2=_interopRequireDefault(_loglevel)}).call(exports,__webpack_require__(3))},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_RESULT__;!function(root,definition){"use strict";if("object"==typeof module&&module.exports&&true)module.exports=definition();else if(true)!(__WEBPACK_AMD_DEFINE_FACTORY__=definition,__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof __WEBPACK_AMD_DEFINE_FACTORY__?__WEBPACK_AMD_DEFINE_FACTORY__.call(exports,__webpack_require__,exports,module):__WEBPACK_AMD_DEFINE_FACTORY__,void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));else root.log=definition()}(this,function(){"use strict";function realMethod(methodName){if(typeof console===undefinedType)return false;else if(void 0!==console[methodName])return bindMethod(console,methodName);else if(void 0!==console.log)return bindMethod(console,"log");else return noop}function bindMethod(obj,methodName){var method=obj[methodName];if("function"==typeof method.bind)return method.bind(obj);else try{return Function.prototype.bind.call(method,obj)}catch(e){return function(){return Function.prototype.apply.apply(method,[obj,arguments])}}}function enableLoggingWhenConsoleArrives(methodName,level,loggerName){return function(){if(typeof console!==undefinedType){replaceLoggingMethods.call(this,level,loggerName);this[methodName].apply(this,arguments)}}}function replaceLoggingMethods(level,loggerName){for(var i=0;i<logMethods.length;i++){var methodName=logMethods[i];this[methodName]=level>i?noop:this.methodFactory(methodName,level,loggerName)}}function defaultMethodFactory(methodName,level,loggerName){return realMethod(methodName)||enableLoggingWhenConsoleArrives.apply(this,arguments)}function Logger(name,defaultLevel,factory){function persistLevelIfPossible(levelNum){var levelName=(logMethods[levelNum]||"silent").toUpperCase();try{window.localStorage[storageKey]=levelName;return}catch(ignore){}try{window.document.cookie=encodeURIComponent(storageKey)+"="+levelName+";"}catch(ignore){}}function getPersistedLevel(){var storedLevel;try{storedLevel=window.localStorage[storageKey]}catch(ignore){}if(typeof storedLevel===undefinedType)try{var cookie=window.document.cookie;var location=cookie.indexOf(encodeURIComponent(storageKey)+"=");if(location)storedLevel=/^([^;]+)/.exec(cookie.slice(location))[1]}catch(ignore){}if(void 0===self.levels[storedLevel])storedLevel=void 0;return storedLevel}var self=this;var currentLevel;var storageKey="loglevel";if(name)storageKey+=":"+name;self.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5};self.methodFactory=factory||defaultMethodFactory;self.getLevel=function(){return currentLevel};self.setLevel=function(level,persist){if("string"==typeof level&&void 0!==self.levels[level.toUpperCase()])level=self.levels[level.toUpperCase()];if("number"==typeof level&&level>=0&&level<=self.levels.SILENT){currentLevel=level;if(false!==persist)persistLevelIfPossible(level);replaceLoggingMethods.call(self,level,name);if(typeof console===undefinedType&&level<self.levels.SILENT)return"No console available for logging"}else throw"log.setLevel() called with invalid level: "+level};self.setDefaultLevel=function(level){if(!getPersistedLevel())self.setLevel(level,false)};self.enableAll=function(persist){self.setLevel(self.levels.TRACE,persist)};self.disableAll=function(persist){self.setLevel(self.levels.SILENT,persist)};var initialLevel=getPersistedLevel();if(null==initialLevel)initialLevel=null==defaultLevel?"WARN":defaultLevel;self.setLevel(initialLevel,false)}var noop=function(){};var undefinedType="undefined";var logMethods=["trace","debug","info","warn","error"];var defaultLogger=new Logger;var _loggersByName={};defaultLogger.getLogger=function getLogger(name){if("string"!=typeof name||""===name)throw new TypeError("You must supply a name when creating a logger.");var logger=_loggersByName[name];if(!logger)logger=_loggersByName[name]=new Logger(name,defaultLogger.getLevel(),defaultLogger.methodFactory);return logger};var _log=typeof window!==undefinedType?window.log:void 0;defaultLogger.noConflict=function(){if(typeof window!==undefinedType&&window.log===defaultLogger)window.log=_log;return defaultLogger};return defaultLogger})},function(module,exports){"use strict";function LimitStore(){}Object.defineProperty(exports,"__esModule",{value:true});LimitStore.store={};LimitStore.LIMIT=2;LimitStore.put=function(key,value){if(void 0===LimitStore.store[key])LimitStore.store[key]=[null,null];LimitStore.store[key].push(value);if(LimitStore.store[key].length==LimitStore.LIMIT+1)LimitStore.store[key].shift();return LimitStore.store[key]};LimitStore.get=function(key){return LimitStore.store[key]};exports["default"]=LimitStore},function(module,exports){"use strict";if("undefined"!=typeof window)!function(){function CustomEvent(event,params){params=params||{bubbles:false,cancelable:false,details:void 0};var evt=document.createEvent("CustomEvent");evt.initCustomEvent(event,params.bubbles,params.cancelable,params.details);return evt}CustomEvent.prototype=window.Event.prototype;window.CustomEvent=CustomEvent}()}]);
//# sourceMappingURL=OneSignalSDK.js.map