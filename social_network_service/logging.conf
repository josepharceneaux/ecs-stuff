#  See http://docs.python.org/library/logging.html for details of the logging facility.
#  Note that this is not the newer logging.config facility.
#
#  The default configuration is console-based (stdout) for backward compatibility;
#  edit the [handlers] section to choose a different logging destination.
#
#  Note that file-based handlers are thread-safe but not mp-safe;
#  for mp-safe logging, configure the appropriate syslog handler.
#
#  To create a configurable logger for application 'myapp', add myapp to
#  the [loggers] keys list and add a [logger_myapp] section, using
#  [logger_welcome] as a starting point.
#
#  In your application, create your logger in your model or in a controller:
#
#  import logging
#  logger = logging.getLogger("web2py.app.myapp")
#  logger.setLevel(logging.DEBUG)
#
#  To log a message:
#
#  logger.debug("You ought to know that %s" % details)
#
#  Note that a logging call will be governed by the most restrictive level
#  set by the setLevel call, the [logger_myapp] section, and the [handler_...]
#  section. For example, you will not see DEBUG messages unless all three are
#  set to DEBUG.
#
#  Available levels: DEBUG INFO WARNING ERROR CRITICAL

[loggers]
keys=root,markdown,social_network_service,rewrite,cron,app,welcome,ci,dev,qa,prod

[handlers]
keys=consoleHandler,HTTPSHandler
#keys=consoleHandler
#keys=osxSysLogHandler
#keys=notifySendHandler

[formatters]
keys=simpleFormatter,jsonFormat

[logger_root]
level=WARNING
handlers=consoleHandler,HTTPSHandler

[logger_social_network_service]
level=WARNING
handlers=consoleHandler,HTTPSHandler
qualname=social_network_service
propagate=0

#  URL rewrite logging (routes.py)
#  See also the logging parameter in routes.py
#
[logger_rewrite]
level=WARNING
qualname=social_network_service.rewrite
handlers=consoleHandler,HTTPSHandler
propagate=0

[logger_cron]
level=WARNING
qualname=social_network_service.cron
handlers=consoleHandler,HTTPSHandler
propagate=0

# generic app handler
[logger_app]
level=WARNING
qualname=from social_network_service.custom_exceptions import SocialNetworkNotImplemented,\
    SocialNetworkApiException, AccessTokenHasExpired

handlers=consoleHandler,HTTPSHandler
propagate=0

# welcome app handler
[logger_welcome]
level=WARNING
qualname=social_network_service.welcome
handlers=consoleHandler,HTTPSHandler
propagate=0

# Event Service Prod
[logger_prod]
level=INFO
qualname=social_network_service.prod
handlers=HTTPSHandler
propagate=0

# Event Service QA
[logger_qa]
level=DEBUG
qualname=social_network_service.qa
handlers=HTTPSHandler
propagate=0

# Event Service CI Environment
[logger_ci]
level=DEBUG
qualname=social_network_service.ci
handlers=HTTPSHandler
propagate=0

# Event Service Local Dev Environment
[logger_dev]
level=DEBUG
qualname=social_network_service.dev
handlers=consoleHandler
propagate=0


[logger_markdown]
level=WARNING
handlers=consoleHandler,HTTPSHandler
qualname=markdown
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)


[handler_osxSysLogHandler]
class=handlers.SysLogHandler
level=WARNING
formatter=simpleFormatter
args=("/var/run/syslog", handlers.SysLogHandler.LOG_DAEMON)

[handler_HTTPSHandler]
class=loggly.handlers.HTTPSHandler
formatter=jsonFormat
args=('https://logs-01.loggly.com/inputs/0ddd049a-17df-4883-af12-53f183378b62/tag/python','POST')

[handler_linuxSysLogHandler]
class=handlers.SysLogHandler
level=WARNING
formatter=simpleFormatter
args=("/dev/log", handlers.SysLogHandler.LOG_DAEMON)

[handler_remoteSysLogHandler]
class=handlers.SysLogHandler
level=WARNING
formatter=simpleFormatter
args=(('sysloghost.domain.com', handlers.SYSLOG_UDP_PORT), handlers.SysLogHandler.LOG_DAEMON)

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=

[formatter_jsonFormat]
format={ "loggerName":"%(name)s", "asciTime":"%(asctime)s", "fileName":"%(filename)s", "logRecordCreationTime":"%(created)f", "functionName":"%(funcName)s", "levelNo":"%(levelno)s", "lineNo":"%(lineno)d", "time":"%(msecs)d", "levelName":"%(levelname)s", "message":"%(message)s"}
datefmt=