{"report": {"environment": {"Python": "2.7.9", "Platform": "Linux-4.4.0-57-generic-x86_64-with-debian-stretch-sid", "Environment": "dev"}, "tests": [{"name": "restful_api_tests/test_v1_importer.py::Test_Event_Importer::()::test_meetup_rsvp_importer_with_invalid_token", "teardown": {"duration": 0.0002090930938720703, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0004150867462158203, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_importer.py', 40, u'Skipped: TODO: Need to create mock endpoints for importer')"}, "run_index": 6, "duration": 0.001039266586303711, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_get_with_invalid_token", "teardown": {"duration": 0.0002989768981933594, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0011439323425292969, "outcome": "passed", "name": "setup"}, "run_index": 4, "call": {"duration": 0.02101302146911621, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:32:50,633 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.023599863052368164, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Eventbrite]", "teardown": {"duration": 0.00025010108947753906, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0003781318664550781, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_event_by_id.py', 156, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 1, "duration": 0.0010063648223876953, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_events_post_with_invalid_token", "teardown": {"duration": 0.00040793418884277344, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010669231414794922, "outcome": "passed", "name": "setup"}, "run_index": 5, "call": {"duration": 0.020993947982788086, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:32:50,658 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.023535728454589844, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_put_with_invalid_token", "teardown": {"duration": 0.0004210472106933594, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010519027709960938, "outcome": "passed", "name": "setup"}, "run_index": 3, "call": {"duration": 0.029799938201904297, "outcome": "passed", "name": "call"}, "duration": 0.032324790954589844, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_post_with_invalid_token", "teardown": {"duration": 0.0010700225830078125, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.00039005279541015625, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 40, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 8, "duration": 0.001850128173828125, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_get_by_id_with_invalid_token", "teardown": {"duration": 0.00030994415283203125, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0011150836944580078, "outcome": "passed", "name": "setup"}, "run_index": 2, "call": {"duration": 0.045857906341552734, "outcome": "passed", "name": "call"}, "duration": 0.04839801788330078, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_get_with_invalid_token", "teardown": {"duration": 0.00020599365234375, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.00041985511779785156, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 19, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 7, "duration": 0.0010457038879394531, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_post_with_invalid_token", "teardown": {"duration": 0.00035309791564941406, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010590553283691406, "outcome": "passed", "name": "setup"}, "run_index": 11, "call": {"duration": 0.02026510238647461, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:32:50,726 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.022736310958862305, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_delete_with_invalid_token", "teardown": {"duration": 0.00035500526428222656, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0007028579711914062, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 147, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 9, "duration": 0.001760721206665039, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_get_with_invalid_token", "teardown": {"duration": 0.0003108978271484375, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010840892791748047, "outcome": "passed", "name": "setup"}, "run_index": 10, "call": {"duration": 0.020282983779907227, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:32:50,702 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.022762060165405273, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Meetup]", "teardown": {"duration": 0.0002620220184326172, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 4.377385854721069, "outcome": "error", "stdout": "('Test Data Response: ', '{\"domains\": [{\"organization_id\": \"\", \"name\": \"test_domain_first1484224366.0Eu2Ifk0Dau\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:32:46\", \"updated_time\": \"2017-01-12 12:32:46\", \"is_disabled\": 0, \"id\": 219, \"default_culture_id\": 1}, {\"organization_id\": \"\", \"name\": \"test_domain_second1484224366.0Eu2Ifk0Dau\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:32:46\", \"updated_time\": \"2017-01-12 12:32:46\", \"is_disabled\": 0, \"id\": 220, \"default_culture_id\": 1}], \"groups_ids\": [212, 213], \"client\": {\"client_secret\": \"CNR4lJ0pF81V1btEdweCCA4kecChWoKFDXsmWGyElQEAIvfQmIM3hcJ\", \"client_name\": \"test_client\", \"client_id\": \"icCdX0FTWd6ZcEWEbEomf1JkPwRbMPwHOFhmd3mM\"}, \"users\": [{\"id\": 311, \"user_group_id\": 212, \"domain_id\": 219, \"email\": \"1484224366.0Eu2Ifk0Dautest_email@test.com\", \"role_id\": 5}, {\"id\": 312, \"user_group_id\": 212, \"domain_id\": 219, \"email\": \"1484224366.0Eu2Ifk0Dautest_email_same_domain@test.com\", \"role_id\": 5}, {\"id\": 313, \"user_group_id\": 213, \"domain_id\": 220, \"email\": \"1484224366.0Eu2Ifk0Dautest_email_second@test.com\", \"role_id\": 5}], \"tokens\": [{\"user_id\": 311, \"access_token\": \"2rkm14olJnZ8FULF8frdylBbOrmhzx38g2tFHB8nz2KoHTAAU4te2nVkIKaT\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"icCdX0FTWd6ZcEWEbEomf1JkPwRbMPwHOFhmd3mM\", \"_scopes\": \"\", \"id\": 316, \"refresh_token\": \"nPb4TgkYymDWpW7UUKTFseaPKWH48VmSwZiRdvFWzDsBttVLnc89arqoh7qp\"}, {\"user_id\": 312, \"access_token\": \"JvyuAnxqhknsZmHXNfsscAiojZqym9snwGlrUTirriKKZ9DV5oJURQI1GHD6\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"icCdX0FTWd6ZcEWEbEomf1JkPwRbMPwHOFhmd3mM\", \"_scopes\": \"\", \"id\": 317, \"refresh_token\": \"1xXFqyZwV6dEsffgPhIkFySXlvcYa1agX5BIsgQvav02FNwv46vbp5bY1uVZ\"}, {\"user_id\": 313, \"access_token\": \"Ry4GD0VgsmWnDtBtG3UByNCuQEkbxDirvU525cfJZU7NSNLw2ByHhW9J9SxF\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"icCdX0FTWd6ZcEWEbEomf1JkPwRbMPwHOFhmd3mM\", \"_scopes\": \"\", \"id\": 318, \"refresh_token\": \"k3edtQwKUX6SupS0Yg1KfCVRfVpveKlwObaN4tC8BJSvXC0trvSDh7pyI4fl\"}]}\\n', 200)\n", "name": "setup", "longrepr": "request = <SubRequest 'event_in_db' for <Function 'test_delete_with_invalid_token[Meetup]'>>\n\n    @pytest.fixture(scope=\"session\", params=VENDORS)\n    def event_in_db(request):\n        \"\"\"\n        This fixture creates an event on vendor basis and returns it.\n        e.g. In case of Eventbrite, it will return fixture named as \"eventbrite_event\"\n        \"\"\"\n>       return deepcopy(request.getfuncargvalue(\"{}_event\".format(request.param.lower())))\n\ncommon/campaign_services/tests/conftest.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmeetup = {'id': 27L}\nuser_first = {'domain_id': 219, 'email': '1484224366.0Eu2Ifk0Dautest_email@test.com', 'id': 311, 'role_id': 5, ...}\ntoken_first = '2rkm14olJnZ8FULF8frdylBbOrmhzx38g2tFHB8nz2KoHTAAU4te2nVkIKaT'\ntest_meetup_credentials = <social_network_service.common.models.user.UserSocialNetworkCredential object at 0x7fe864d2f990>\n\n    @pytest.fixture(scope=\"session\")\n    def meetup_venue(meetup, user_first, token_first, test_meetup_credentials):\n        \"\"\"\n        This fixture returns meetup venue in getTalent database\n        \"\"\"\n        social_network_id = meetup['id']\n        venue = {\n            \"social_network_id\": social_network_id,\n            \"user_id\": user_first['id'],\n            \"zip_code\": \"95014\",\n            \"group_url_name\": 'Python-Learning-Meetup',\n            \"address_line_2\": \"\",\n            \"address_line_1\": \"Infinite Loop\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"state\": \"CA\",\n            \"city\": \"Cupertino\",\n            \"country\": \"us\"\n        }\n    \n        response_post = send_request('POST', SocialNetworkApiUrl.VENUES, access_token=token_first, data=venue)\n    \n        data = response_post.json()\n        if response_post.status_code == codes.bad:\n            data = data['error']\n    \n>       assert response_post.status_code == codes.created or response_post.status_code == codes.bad, response_post.text\nE       AssertionError: {\nE         \"error\": {\nE           \"code\": 4066, \nE           \"message\": \"Access token has expired for Meetup\"\nE         }\nE       }\n\ncommon/campaign_services/tests/conftest.py:84: AssertionError"}, "run_index": 0, "duration": 8.755033731460571, "outcome": "error"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_delete_with_invalid_token", "teardown": {"duration": 0.0006480216979980469, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.001068115234375, "outcome": "passed", "name": "setup"}, "run_index": 12, "call": {"duration": 0.020470857620239258, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:32:50,750 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.023255109786987305, "outcome": "passed"}], "created_at": "2017-01-12 17:32:50.753784", "summary": {"duration": 5.064475059509277, "skipped": 5, "num_tests": 13, "passed": 7, "error": 1}}}