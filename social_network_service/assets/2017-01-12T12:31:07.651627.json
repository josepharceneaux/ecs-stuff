{"report": {"environment": {"Python": "2.7.9", "Platform": "Linux-4.4.0-57-generic-x86_64-with-debian-stretch-sid", "Environment": "dev"}, "tests": [{"name": "restful_api_tests/test_v1_importer.py::Test_Event_Importer::()::test_meetup_rsvp_importer_with_invalid_token", "teardown": {"duration": 0.00019311904907226562, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0004019737243652344, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_importer.py', 40, u'Skipped: TODO: Need to create mock endpoints for importer')"}, "run_index": 6, "duration": 0.0009970664978027344, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_get_with_invalid_token", "teardown": {"duration": 0.0002751350402832031, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010728836059570312, "outcome": "passed", "name": "setup"}, "run_index": 4, "call": {"duration": 0.01941394805908203, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:31:13,542 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.021834850311279297, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Eventbrite]", "teardown": {"duration": 0.00015807151794433594, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.00033402442932128906, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_event_by_id.py', 156, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 1, "duration": 0.0008261203765869141, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_events_post_with_invalid_token", "teardown": {"duration": 0.0003440380096435547, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010161399841308594, "outcome": "passed", "name": "setup"}, "run_index": 5, "call": {"duration": 0.019145965576171875, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:31:13,565 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.02152228355407715, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_put_with_invalid_token", "teardown": {"duration": 0.0003440380096435547, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0009720325469970703, "outcome": "passed", "name": "setup"}, "run_index": 3, "call": {"duration": 0.02674102783203125, "outcome": "passed", "name": "call"}, "duration": 0.029029130935668945, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_post_with_invalid_token", "teardown": {"duration": 0.0007660388946533203, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0003609657287597656, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 40, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 8, "duration": 0.0014879703521728516, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_get_by_id_with_invalid_token", "teardown": {"duration": 0.0002770423889160156, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0009889602661132812, "outcome": "passed", "name": "setup"}, "run_index": 2, "call": {"duration": 0.03412508964538574, "outcome": "passed", "name": "call"}, "duration": 0.03638005256652832, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_get_with_invalid_token", "teardown": {"duration": 0.0001850128173828125, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.00038504600524902344, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 19, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 7, "duration": 0.0009551048278808594, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_post_with_invalid_token", "teardown": {"duration": 0.0002751350402832031, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010080337524414062, "outcome": "passed", "name": "setup"}, "run_index": 11, "call": {"duration": 0.023537874221801758, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:31:13,632 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.025829076766967773, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_delete_with_invalid_token", "teardown": {"duration": 0.00018405914306640625, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0003838539123535156, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 147, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 9, "duration": 0.0009517669677734375, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_get_with_invalid_token", "teardown": {"duration": 0.0002739429473876953, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010600090026855469, "outcome": "passed", "name": "setup"}, "run_index": 10, "call": {"duration": 0.02028203010559082, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:31:13,605 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.02267599105834961, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Meetup]", "teardown": {"duration": 0.0003380775451660156, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 4.298800945281982, "outcome": "error", "stdout": "('Test Data Response: ', '{\"domains\": [{\"organization_id\": \"\", \"name\": \"test_domain_first1484224269.02udQhbJitCG\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:31:09\", \"updated_time\": \"2017-01-12 12:31:09\", \"is_disabled\": 0, \"id\": 217, \"default_culture_id\": 1}, {\"organization_id\": \"\", \"name\": \"test_domain_second1484224269.02udQhbJitCG\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:31:09\", \"updated_time\": \"2017-01-12 12:31:09\", \"is_disabled\": 0, \"id\": 218, \"default_culture_id\": 1}], \"groups_ids\": [210, 211], \"client\": {\"client_secret\": \"16hhEP3RJbevMu9E2btFqEaPsZ6Viy5MMh8h7CGIzWTXjZoYJl0r9x6\", \"client_name\": \"test_client\", \"client_id\": \"bcVzCjN6OuQRjjrs15RomAaoMzjQSnW3ufEpKoYC\"}, \"users\": [{\"id\": 308, \"user_group_id\": 210, \"domain_id\": 217, \"email\": \"1484224269.02udQhbJitCGtest_email@test.com\", \"role_id\": 5}, {\"id\": 309, \"user_group_id\": 210, \"domain_id\": 217, \"email\": \"1484224269.02udQhbJitCGtest_email_same_domain@test.com\", \"role_id\": 5}, {\"id\": 310, \"user_group_id\": 211, \"domain_id\": 218, \"email\": \"1484224269.02udQhbJitCGtest_email_second@test.com\", \"role_id\": 5}], \"tokens\": [{\"user_id\": 308, \"access_token\": \"n8eSDes0Nqyy1ZIXUboJepvmSgAzrSK0SmLZbEXbtmf2VoJhFpTpe9NGyb8Z\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"bcVzCjN6OuQRjjrs15RomAaoMzjQSnW3ufEpKoYC\", \"_scopes\": \"\", \"id\": 313, \"refresh_token\": \"SK7E2Chb0FKOLbSbzwHqxfsQ272V8o10v7z749KT7ZZ34nfqabJYEzVKCCjk\"}, {\"user_id\": 309, \"access_token\": \"wivmKd9Ii7ozDSN0b5dogDOMHmpSwUYCbHUxJcosGDrjIvnIVeHssgtjfz9I\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"bcVzCjN6OuQRjjrs15RomAaoMzjQSnW3ufEpKoYC\", \"_scopes\": \"\", \"id\": 314, \"refresh_token\": \"MtwkbOKkJR9H32VzslQTjKLZQcqw7rLKyE8He0ZFPBXqiCggZgelzEMtVu46\"}, {\"user_id\": 310, \"access_token\": \"WJqumqyXGomwe6J5l7c3cTmtG0zjgfsSfPb5wFjt2b2cVMyZ0Zd7wWbpzjdF\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"bcVzCjN6OuQRjjrs15RomAaoMzjQSnW3ufEpKoYC\", \"_scopes\": \"\", \"id\": 315, \"refresh_token\": \"WZ0AQw7XpVWeBdY1wi24hw1GFwO46LbxCpzP0hbBjKAJZtTzofAxHKWZsYKG\"}]}\\n', 200)\n", "name": "setup", "longrepr": "request = <SubRequest 'event_in_db' for <Function 'test_delete_with_invalid_token[Meetup]'>>\n\n    @pytest.fixture(scope=\"session\", params=VENDORS)\n    def event_in_db(request):\n        \"\"\"\n        This fixture creates an event on vendor basis and returns it.\n        e.g. In case of Eventbrite, it will return fixture named as \"eventbrite_event\"\n        \"\"\"\n>       return deepcopy(request.getfuncargvalue(\"{}_event\".format(request.param.lower())))\n\ncommon/campaign_services/tests/conftest.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmeetup = {'id': 27L}\nuser_first = {'domain_id': 217, 'email': '1484224269.02udQhbJitCGtest_email@test.com', 'id': 308, 'role_id': 5, ...}\ntoken_first = 'n8eSDes0Nqyy1ZIXUboJepvmSgAzrSK0SmLZbEXbtmf2VoJhFpTpe9NGyb8Z'\ntest_meetup_credentials = <social_network_service.common.models.user.UserSocialNetworkCredential object at 0x7f19a58bab10>\n\n    @pytest.fixture(scope=\"session\")\n    def meetup_venue(meetup, user_first, token_first, test_meetup_credentials):\n        \"\"\"\n        This fixture returns meetup venue in getTalent database\n        \"\"\"\n        social_network_id = meetup['id']\n        venue = {\n            \"social_network_id\": social_network_id,\n            \"user_id\": user_first['id'],\n            \"zip_code\": \"95014\",\n            \"group_url_name\": 'Python-Learning-Meetup',\n            \"address_line_2\": \"\",\n            \"address_line_1\": \"Infinite Loop\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"state\": \"CA\",\n            \"city\": \"Cupertino\",\n            \"country\": \"us\"\n        }\n    \n        response_post = send_request('POST', SocialNetworkApiUrl.VENUES, access_token=token_first, data=venue)\n    \n        data = response_post.json()\n        if response_post.status_code == codes.bad:\n            data = data['error']\n    \n>       assert response_post.status_code == codes.created or response_post.status_code == codes.bad, response_post.text\nE       AssertionError: {\nE         \"error\": {\nE           \"code\": 4066, \nE           \"message\": \"Access token has expired for Meetup\"\nE         }\nE       }\n\ncommon/campaign_services/tests/conftest.py:84: AssertionError"}, "run_index": 0, "duration": 8.59793996810913, "outcome": "error"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_delete_with_invalid_token", "teardown": {"duration": 0.0006258487701416016, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010449886322021484, "outcome": "passed", "name": "setup"}, "run_index": 12, "call": {"duration": 0.021425962448120117, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:31:13,657 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.024141788482666016, "outcome": "passed"}], "created_at": "2017-01-12 17:31:13.660610", "summary": {"duration": 4.958881855010986, "skipped": 5, "num_tests": 13, "passed": 7, "error": 1}}}