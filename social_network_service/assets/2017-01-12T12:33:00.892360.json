{"report": {"environment": {"Python": "2.7.9", "Platform": "Linux-4.4.0-57-generic-x86_64-with-debian-stretch-sid", "Environment": "dev"}, "tests": [{"name": "restful_api_tests/test_v1_importer.py::Test_Event_Importer::()::test_meetup_rsvp_importer_with_invalid_token", "teardown": {"duration": 0.00020194053649902344, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0004169940948486328, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_importer.py', 40, u'Skipped: TODO: Need to create mock endpoints for importer')"}, "run_index": 6, "duration": 0.001035928726196289, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_get_with_invalid_token", "teardown": {"duration": 0.0002849102020263672, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0011699199676513672, "outcome": "passed", "name": "setup"}, "run_index": 4, "call": {"duration": 0.020135164260864258, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:33:03,701 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.02275991439819336, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Eventbrite]", "teardown": {"duration": 0.00021886825561523438, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0003459453582763672, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_event_by_id.py', 156, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 1, "duration": 0.0009107589721679688, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_events_api.py::TestResourceEvents::()::test_events_post_with_invalid_token", "teardown": {"duration": 0.00037097930908203125, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010509490966796875, "outcome": "passed", "name": "setup"}, "run_index": 5, "call": {"duration": 0.021255016326904297, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:33:03,726 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.023727893829345703, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_put_with_invalid_token", "teardown": {"duration": 0.0003809928894042969, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0009629726409912109, "outcome": "passed", "name": "setup"}, "run_index": 3, "call": {"duration": 0.027637004852294922, "outcome": "passed", "name": "call"}, "duration": 0.02994394302368164, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_post_with_invalid_token", "teardown": {"duration": 0.00018715858459472656, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0005791187286376953, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 40, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 8, "duration": 0.0013453960418701172, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_get_by_id_with_invalid_token", "teardown": {"duration": 0.00026297569274902344, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0008578300476074219, "outcome": "passed", "name": "setup"}, "run_index": 2, "call": {"duration": 0.025404930114746094, "outcome": "passed", "name": "call"}, "duration": 0.02738356590270996, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_get_with_invalid_token", "teardown": {"duration": 0.0002009868621826172, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.00040602684020996094, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 19, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 7, "duration": 0.001013040542602539, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_post_with_invalid_token", "teardown": {"duration": 0.0002810955047607422, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0009720325469970703, "outcome": "passed", "name": "setup"}, "run_index": 11, "call": {"duration": 0.018951892852783203, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:33:03,788 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.021177053451538086, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_organizer_api.py::TestOrganizers::()::test_delete_with_invalid_token", "teardown": {"duration": 0.00022602081298828125, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0003619194030761719, "outcome": "skipped", "name": "setup", "longrepr": "('restful_api_tests/test_v1_organizer_api.py', 147, u'Skipped: In contact with Eventbrite support for increasing hit rate limit')"}, "run_index": 9, "duration": 0.000949859619140625, "outcome": "skipped"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_get_with_invalid_token", "teardown": {"duration": 0.0003139972686767578, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0009949207305908203, "outcome": "passed", "name": "setup"}, "run_index": 10, "call": {"duration": 0.01921701431274414, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:33:03,765 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.02152085304260254, "outcome": "passed"}, {"name": "restful_api_tests/test_v1_event_by_id.py::TestEventById::()::test_delete_with_invalid_token[Meetup]", "teardown": {"duration": 0.0003108978271484375, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 2.2888429164886475, "outcome": "error", "stdout": "('Test Data Response: ', '{\"domains\": [{\"organization_id\": \"\", \"name\": \"test_domain_first1484224381.19vLZkl84beK\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:33:01\", \"updated_time\": \"2017-01-12 12:33:01\", \"is_disabled\": 0, \"id\": 223, \"default_culture_id\": 1}, {\"organization_id\": \"\", \"name\": \"test_domain_second1484224381.19vLZkl84beK\", \"default_tracking_code\": \"\", \"is_fair_check_on\": false, \"is_active\": true, \"settings_json\": \"\", \"default_from_name\": \"\", \"usage_limitation\": \"\", \"dice_company_id\": \"\", \"expiration\": \"\", \"added_time\": \"2017-01-12 12:33:01\", \"updated_time\": \"2017-01-12 12:33:01\", \"is_disabled\": 0, \"id\": 224, \"default_culture_id\": 1}], \"groups_ids\": [216, 217], \"client\": {\"client_secret\": \"OBLIxIBMNPUfjWjLnnvB0JYs2TGei5w47DVaEXnhHeE3ApnL4jJiSE2\", \"client_name\": \"test_client\", \"client_id\": \"OYRFA5Gxyqa98cAi0YgxxJ5mkVtE73iMuST35UPh\"}, \"users\": [{\"id\": 317, \"user_group_id\": 216, \"domain_id\": 223, \"email\": \"1484224381.19vLZkl84beKtest_email@test.com\", \"role_id\": 5}, {\"id\": 318, \"user_group_id\": 216, \"domain_id\": 223, \"email\": \"1484224381.19vLZkl84beKtest_email_same_domain@test.com\", \"role_id\": 5}, {\"id\": 319, \"user_group_id\": 217, \"domain_id\": 224, \"email\": \"1484224381.19vLZkl84beKtest_email_second@test.com\", \"role_id\": 5}], \"tokens\": [{\"user_id\": 317, \"access_token\": \"fz1DnnWxdqdFgW9RoaX7FtJPmPcKFaspJO53CTSmvg5pzT8hCJJFBOudmh8B\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"OYRFA5Gxyqa98cAi0YgxxJ5mkVtE73iMuST35UPh\", \"_scopes\": \"\", \"id\": 322, \"refresh_token\": \"qeRGCZABLUxB868i0uuUVerfLxyMxjuY2JpKuhH7o5U0sseRO181ZHnMgvhL\"}, {\"user_id\": 318, \"access_token\": \"MUPUqmbtIbbBLMRK7eEfIilpS2kSPJ2z91tvt6s9NLjyM8AZ4ScfeMXiRgft\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"OYRFA5Gxyqa98cAi0YgxxJ5mkVtE73iMuST35UPh\", \"_scopes\": \"\", \"id\": 323, \"refresh_token\": \"Q1IJZU8eTAZmmK9KtNtKJyKm9vzXKurXEHFPBMgqoA5ANaQg3n8TUVyULK5Y\"}, {\"user_id\": 319, \"access_token\": \"IaYlGFvpXjYRYhCXbFSy21jCYGhlsBtvWGnN21RRsJdKDjhHGgpozUUhwF1v\", \"expires\": \"2020-12-31 00:00:00\", \"token_type\": \"Bearer\", \"client_id\": \"OYRFA5Gxyqa98cAi0YgxxJ5mkVtE73iMuST35UPh\", \"_scopes\": \"\", \"id\": 324, \"refresh_token\": \"jBF7puKDzVMhlrXKtwhcZolPb6N1qojOaw4BowrZZjryMvzLlVDippVfWvis\"}]}\\n', 200)\n", "name": "setup", "longrepr": "request = <SubRequest 'event_in_db' for <Function 'test_delete_with_invalid_token[Meetup]'>>\n\n    @pytest.fixture(scope=\"session\", params=VENDORS)\n    def event_in_db(request):\n        \"\"\"\n        This fixture creates an event on vendor basis and returns it.\n        e.g. In case of Eventbrite, it will return fixture named as \"eventbrite_event\"\n        \"\"\"\n>       return deepcopy(request.getfuncargvalue(\"{}_event\".format(request.param.lower())))\n\ncommon/campaign_services/tests/conftest.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmeetup = {'id': 27L}\nuser_first = {'domain_id': 223, 'email': '1484224381.19vLZkl84beKtest_email@test.com', 'id': 317, 'role_id': 5, ...}\ntoken_first = 'fz1DnnWxdqdFgW9RoaX7FtJPmPcKFaspJO53CTSmvg5pzT8hCJJFBOudmh8B'\ntest_meetup_credentials = <social_network_service.common.models.user.UserSocialNetworkCredential object at 0x7fe8642ee0d0>\n\n    @pytest.fixture(scope=\"session\")\n    def meetup_venue(meetup, user_first, token_first, test_meetup_credentials):\n        \"\"\"\n        This fixture returns meetup venue in getTalent database\n        \"\"\"\n        social_network_id = meetup['id']\n        venue = {\n            \"social_network_id\": social_network_id,\n            \"user_id\": user_first['id'],\n            \"zip_code\": \"95014\",\n            \"group_url_name\": 'Python-Learning-Meetup',\n            \"address_line_2\": \"\",\n            \"address_line_1\": \"Infinite Loop\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"state\": \"CA\",\n            \"city\": \"Cupertino\",\n            \"country\": \"us\"\n        }\n    \n        response_post = send_request('POST', SocialNetworkApiUrl.VENUES, access_token=token_first, data=venue)\n    \n        data = response_post.json()\n        if response_post.status_code == codes.bad:\n            data = data['error']\n    \n>       assert response_post.status_code == codes.created or response_post.status_code == codes.bad, response_post.text\nE       AssertionError: {\nE         \"error\": {\nE           \"code\": 4066, \nE           \"message\": \"Access token has expired for Meetup\"\nE         }\nE       }\n\ncommon/campaign_services/tests/conftest.py:84: AssertionError"}, "run_index": 0, "duration": 4.577996730804443, "outcome": "error"}, {"name": "restful_api_tests/test_v1_venue_api.py::TestVenues::()::test_delete_with_invalid_token", "teardown": {"duration": 0.0005509853363037109, "outcome": "passed", "name": "teardown"}, "setup": {"duration": 0.0010890960693359375, "outcome": "passed", "name": "setup"}, "run_index": 12, "call": {"duration": 0.021113157272338867, "outcome": "passed", "name": "call", "stdout": "2017-01-12 17:33:03,813 - flask_service.dev - INFO - {\n  \"error\": {\n    \"code\": 11, \n    \"message\": \"Bearer Token is not found.\"\n  }\n}\n\n"}, "duration": 0.023842334747314453, "outcome": "passed"}], "created_at": "2017-01-12 17:33:03.816164", "summary": {"duration": 2.80971097946167, "skipped": 5, "num_tests": 13, "passed": 7, "error": 1}}}