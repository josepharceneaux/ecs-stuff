#  See http://docs.python.org/library/logging.html for details of the logging facility.
#  Note that this is not the newer logging.config facility.
#
#  The default configuration is console-based (stdout) for backward compatibility;
#  edit the [handlers] section to choose a different logging destination.
#
#  Note that file-based handlers are thread-safe but not mp-safe;
#  for mp-safe logging, configure the appropriate syslog handler.
#
#  To create a configurable logger for application 'myapp', add myapp to
#  the [loggers] keys list and add a [logger_myapp] section, using
#  [logger_welcome] as a starting point.
#
#  In your application, create your logger in your model or in a controller:
#
#  import logging
#  logger = logging.getLogger("flask_oauthlib.app.myapp")
#  logger.setLevel(logging.DEBUG)
#
#  To log a message:
#
#  logger.debug("You ought to know that %s" % details)
#
#  Note that a logging call will be governed by the most restrictive level
#  set by the setLevel call, the [logger_myapp] section, and the [handler_...]
#  section. For example, you will not see DEBUG messages unless all three are
#  set to DEBUG.
#
#  Available levels: DEBUG INFO WARNING ERROR CRITICAL

[loggers]
keys= root,web_dev,web_ci,web_qa,web_prod

[handlers]
keys=consoleHandler,HTTPSHandler, sysLogHandler

[formatters]
keys=simpleFormatter,jsonFormat

[logger_root]
level=WARNING
handlers=consoleHandler,HTTPSHandler

# Flask Service Prod
[logger_web_prod]
level=INFO
qualname=flask_service.prod
handlers=sysLogHandler
propagate=0

# FlaskService QA
[logger_web_qa]
level=DEBUG
qualname=flask_service.qa
handlers=sysLogHandler
propagate=0

# FlaskService CI Environment
[logger_web_ci]
level=DEBUG
qualname=flask_service.ci
handlers=consoleHandler
propagate=0

# FlaskService Local Dev Environment
[logger_web_dev]
level=DEBUG
qualname=flask_service.dev
handlers=consoleHandler
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

[handler_sysLogHandler]
class=FileHandler
formatter=simpleFormatter
args=("/var/log/flask_log", 'w+')

[handler_HTTPSHandler]
class=loggly.handlers.HTTPSHandler
formatter=jsonFormat
args=('https://logs-01.loggly.com/inputs/0ddd049a-17df-4883-af12-53f183378b62/tag/python','POST')

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s

[formatter_jsonFormat]
format={ "loggerName":"%(name)s", "asciTime":"%(asctime)s", "fileName":"%(filename)s", "logRecordCreationTime":"%(created)f", "functionName":"%(funcName)s", "levelNo":"%(levelno)s", "lineNo":"%(lineno)d", "time":"%(msecs)d", "levelName":"%(levelname)s", "message":"%(message)s" }