// ---------------------------------------------------
// Includes / Colors
// ---------------------------------------------------

@mixin no-gradient--lightGray { // used in instances where you need to animate from lightGray to another gradient
  background-color: $color--lightGray; // fallback
  background-image: linear-gradient(90deg, $color--lightGray, $color--lightGray);
}

@mixin gradients--green {
  background-color: $color--teal; // fallback
  background-image: linear-gradient(90deg, $color--teal, $color--green);
}

@mixin gradients--red {
  background-color: $color--red; // fallback
  background-image: linear-gradient(90deg, $color--red, $color--darkRed);
}

@mixin gradients--blue {
  background-color: $color--blue; // fallback
  background-image: linear-gradient(90deg, $color--lightBlue, $color--blue);
}

@mixin gradients--yellow {
  background-color: $color--yellow; // fallback
  background-image: linear-gradient(90deg, $color--yellow, $color--darkYellow);
}

@mixin gradients--orange-to-pink {
  background-color: $color--orange; // fallback
  background-image: linear-gradient(90deg, $color--orange-alt, $color--pink-alt);
}


// Global Mix In

@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}

@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }

  $conversion-map: (
          to top          : bottom,
          to top right    : bottom left,
          to right top    : left bottom,
          to right        : left,
          to bottom right : top left,
          to right bottom : left top,
          to bottom       : top,
          to bottom left  : top right,
          to left bottom  : right top,
          to left         : right,
          to left top     : right bottom,
          to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - $value;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// Base Hero Gradients
.gradient-build {
  @include linear-gradient(to right, #d5bf28, #2bd6d3);
}

.gradient-organize {
  @include linear-gradient(to right, #60bff1, #924dd3);
}

.gradient-engage {
  @include linear-gradient(to right, #f0b129, #f26a69);
}

.gradient-analyze {
  @include linear-gradient(to right, #c369d3, #c4245d);
}

.gradient-success {
  @include linear-gradient(to right, #44c196, #21bd58);
}

.gradient-error {
  @include linear-gradient(to right, #e26817, #d41817);
}

.gradient-empty {
  @include linear-gradient(to right, #c6c6c6, #a7afb3);
}

